import java.text.SimpleDateFormat
import java.util.Date

apply plugin: 'java'
sourceCompatibility = 20
targetCompatibility = 20


def getCurrentTimestamp ()
{
  Date today = new Date ()
  SimpleDateFormat df = new SimpleDateFormat ("dd_MMM_yyyy_hh_mm_aa")
  return df.format (today)
}

ext{

	//set true to enable to compile using aspectj
	compileUsingAspect = false
	
    testResultsDir = 'test-results'
    runTime = getCurrentTimestamp()
	resultOutputDir = String.valueOf(testResultsDir)+'/'+runTime
	
	// set suiteFile, default is 'config/testrun_config.xml'
    if (!project.hasProperty('suiteFile')) {
        suiteFile = 'config/testrun_config.xml'
    }
}
repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
       jcenter()
    maven {
            url "https://qmetry.github.io/qaf/dist/"
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'
    implementation 'com.qmetry:qaf:4.0.0-RC2'
    // https://mvnrepository.com/artifact/com.qmetry/qaf-support
implementation 'com.qmetry:qaf-support:4.0.0-RC2'
    
}

//for compilation using aspectj
if(compileUsingAspect){
	compileTestJava.deleteAllActions()
	compileTestJava << {
		
		ant.taskdef(
			resource: 'org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties',
			classpath: configurations.testCompile.asPath )
		
		ant.iajc(
				source: sourceCompatibility,
				target: targetCompatibility,
				destDir: sourceSets.test.output.classesDir.absolutePath,
				fork: 'true',
				sourceRootCopyFilter: '**/*.java,**/*.aj',
				aspectpath: configurations.testCompile.asPath ) 
		
		{
			sourceroots {
				sourceSets.test.java.srcDirs.each { 
					dir -> pathelement(location: dir.absolutePath)
				}
			}
		}
	}
}

//run test
test{
	useTestNG(){
		useDefaultListeners = true
		outputDirectory file(resultOutputDir)
		suites suiteFile

		//System properties for report
		systemProperty 'org.uncommons.reportng.xml-dialect','testng'
		systemProperty 'org.uncommons.reportng.escape-output',false
		systemProperty 'log4j.configuration','file:///'+projectDir+'/resources/log4j.properties'
		systemProperty 'json.report.root.dir',testResultsDir
		systemProperty 'outputDir',resultOutputDir
		systemProperty 'test.results.dir',resultOutputDir+'/html'
		systemProperty 'json.report.dir',resultOutputDir+'/json'
		systemProperty 'selenium.screenshots.dir',resultOutputDir+'/img'
		systemProperty 'selenium.screenshots.relative.path','../img' 
		systemProperties System.properties
	}
	testLogging{
		showStandardStreams = true
		exceptionFormat = 'full'
	}
}
